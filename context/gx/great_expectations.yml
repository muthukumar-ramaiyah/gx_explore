# Welcome to Great Expectations! Always know what to expect from your data.
#
# Here you can define datasources, batch kwargs generators, integrations and
# more. This file is intended to be committed to your repo. For help with
# configuration please:
#   - Read our docs: https://docs.greatexpectations.io/docs/guides/connecting_to_your_data/connect_to_data_overview/#2-configure-your-datasource
#   - Join our slack channel: http://greatexpectations.io/slack

# config_version refers to the syntactic version of this config file, and is used in maintaining backwards compatibility
# It is auto-generated and usually does not need to be changed.
config_version: 4.0

# This config file supports variable substitution which enables: 1) keeping
# secrets out of source control & 2) environment-based configuration changes
# such as staging vs prod.
#
# When GX encounters substitution syntax (like `my_key: ${my_value}` or
# `my_key: $my_value`) in the great_expectations.yml file, it will attempt
# to replace the value of `my_key` with the value from an environment
# variable `my_value` or a corresponding key read from this config file,
# which is defined through the `config_variables_file_path`.
# Environment variables take precedence over variables defined here.
#
# Substitution values defined here can be a simple (non-nested) value,
# nested value such as a dictionary, or an environment variable (i.e. ${ENV_VAR})
#
#
# https://docs.greatexpectations.io/docs/guides/setup/configuring_data_contexts/how_to_configure_credentials


config_variables_file_path: uncommitted/config_variables.yml

# The plugins_directory will be added to your python path for custom modules
# used to override and extend Great Expectations.
plugins_directory: plugins/

stores:
# Stores are configurable places to store things like Expectations, Validations
# Data Docs, and more. These are for advanced users only - most users can simply
# leave this section alone.
  expectations_store:
    class_name: ExpectationsStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: expectations/

  validation_results_store:
    class_name: ValidationResultsStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: uncommitted/validations/

  checkpoint_store:
    class_name: CheckpointStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      suppress_store_backend_id: true
      base_directory: checkpoints/

  validation_definition_store:
    class_name: ValidationDefinitionStore
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: validation_definitions/

expectations_store_name: expectations_store
validation_results_store_name: validation_results_store
checkpoint_store_name: checkpoint_store

data_docs_sites:
  # Data Docs make it simple to visualize data quality in your project. These
  # include Expectations, Validations & Profiles. The are built for all
  # Datasources from JSON artifacts in the local repo including validations &
  # profiles from the uncommitted directory. Read more at https://docs.greatexpectations.io/docs/terms/data_docs
  local_site:
    class_name: SiteBuilder
    show_how_to_buttons: true
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: uncommitted/data_docs/local_site/
    site_index_builder:
      class_name: DefaultSiteIndexBuilder
  my_data_docs_site:
    class_name: SiteBuilder
    site_index_builder:
      class_name: DefaultSiteIndexBuilder
    store_backend:
      class_name: TupleFilesystemStoreBackend
      base_directory: uncommitted/data_docs/local_site/
fluent_datasources:
  my_filesystem_data_source:
    type: pandas_filesystem
    id: a01157b6-b197-45f7-b72f-bdf8febf90a8
    assets:
      listings:
        type: csv
        id: efc1d90d-9a64-4e7a-ad13-e4c6c7f379fc
        batch_definitions:
          my_batch_definition:
            id: 417e6c11-d55d-43e0-9fcd-9ca7e6aae2dc
            partitioner:
              regex: listings.csv$
              param_names: []
    base_directory: data
  airbnb:
    type: pandas_filesystem
    id: 938cfab7-a55b-4bf1-ae20-171415a1bb1b
    assets:
      calendar:
        type: csv
        id: 3304e707-8a37-4a38-b8bd-6c51fdc3aedc
        batch_definitions:
          my_calendar_batch:
            id: 5edba137-f4cf-4bcb-a33a-3afeef1c6408
            partitioner:
              regex: calendar.csv$
              param_names: []
      listings:
        type: csv
        id: 97451053-1f83-4d51-bddf-5a6bed8e18f0
        batch_definitions:
          my_listings_batch:
            id: 52adcc2c-7f0c-41c3-aaf9-b81f58f614a9
            partitioner:
              regex: listings.csv$
              param_names: []
      reviews:
        type: csv
        id: 6c0392d7-b06a-4cee-825f-5850590f8e36
        batch_definitions:
          my_reviews_batch:
            id: 7d2acb6d-5adc-489b-b2c3-8dd6c309c8a8
            partitioner:
              regex: reviews.csv$
              param_names: []
    base_directory: data
analytics_enabled:
data_context_id: 7e0ffc40-715a-4961-bc50-b6860553849d
